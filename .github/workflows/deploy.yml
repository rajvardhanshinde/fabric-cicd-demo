name: Deploy to Fabric (DEV / PROD)

on:
  push:
    branches: [ dev, main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate SP JSON secret
        run: |
          echo '${{ secrets.AZURE_SP_NOSUB_JSON }}' | jq -e '.clientId and .clientSecret and .tenantId' >/dev/null \
            || { echo "‚ùå Secret AZURE_SP_NOSUB_JSON must contain clientId, clientSecret, tenantId."; exit 1; }

      - name: Azure Login (SP, no subscription)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_NOSUB_JSON }}
          allow-no-subscriptions: true
          environment: azurecloud

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r scripts/requirements.txt

      # Optional: list visible workspaces (auth sanity check)
      - name: Preflight Fabric visibility
        run: |
          pip install --quiet azure-cli jq
          TOKEN=$(az account get-access-token --resource=https://analysis.windows.net/powerbi/api --query accessToken -o tsv)
          echo "Workspaces visible to SP:"
          curl -s -H "Authorization: Bearer $TOKEN" https://api.powerbi.com/v1.0/myorg/groups \
            | jq -r '.value[] | "\(.name) (\(.id))"'

      - name: Debug context
        run: |
          echo "Branch: ${GITHUB_REF_NAME}"
          echo "Repo:   ${GITHUB_REPOSITORY}"
          echo "Dir:    ${GITHUB_WORKSPACE}"
          ls -R

      - name: Deploy to Fabric
        run: |
          set -euo pipefail
          if [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            echo "üöÄ DEV branch ‚Üí DEV workspace: ${{ secrets.FABRIC_DEV_WORKSPACE_ID }}"
            python scripts/deploy_fabric_items.py \
              --WorkspaceId "${{ secrets.FABRIC_DEV_WORKSPACE_ID }}" \
              --Environment DEV \
              --RepositoryDirectory "${GITHUB_WORKSPACE}" \
              --ItemsInScope all \
              --Debug
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "üöÄ MAIN branch ‚Üí PROD workspace: ${{ secrets.FABRIC_PROD_WORKSPACE_ID }}"
            python scripts/deploy_fabric_items.py \
              --WorkspaceId "${{ secrets.FABRIC_PROD_WORKSPACE_ID }}" \
              --Environment PROD \
              --RepositoryDirectory "${GITHUB_WORKSPACE}" \
              --ItemsInScope all \
              --Debug
          else
            echo "‚ö†Ô∏è Branch ${GITHUB_REF_NAME} not mapped. Skipping."
          fi
