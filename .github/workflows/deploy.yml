name: Deploy to Fabric

on:
  push:
    branches: [ dev, main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          allow-no-subscriptions: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r scripts/requirements.txt

      # ---------- DEBUG: confirm all secrets exist (masked) ----------
      - name: Debug ¬∑ check secrets
        env:
          FABRIC_DEV_WORKSPACE_ID:  ${{ secrets.FABRIC_DEV_WORKSPACE_ID }}
          FABRIC_PROD_WORKSPACE_ID: ${{ secrets.FABRIC_PROD_WORKSPACE_ID }}
          FABRIC_DEV_SQL_HOST:      ${{ secrets.FABRIC_DEV_SQL_HOST }}
          FABRIC_PROD_SQL_HOST:     ${{ secrets.FABRIC_PROD_SQL_HOST }}
          FABRIC_DEV_SQL_ID:        ${{ secrets.FABRIC_DEV_SQL_ID }}
          FABRIC_PROD_SQL_ID:       ${{ secrets.FABRIC_PROD_SQL_ID }}
        run: |
          set -euo pipefail
          check() { local n="$1"; local v="${!n:-}"; [ -n "$v" ] || { echo "‚ùå MISSING $n"; exit 1; }; echo "‚úÖ $n present ¬∑ len=${#v} ¬∑ last4=${v: -4}"; }
          for v in FABRIC_DEV_WORKSPACE_ID FABRIC_PROD_WORKSPACE_ID FABRIC_DEV_SQL_HOST FABRIC_PROD_SQL_HOST FABRIC_DEV_SQL_ID FABRIC_PROD_SQL_ID; do
            check "$v"
          done

      # ---------- DEBUG: show where DEV host/ID appear in TMDL ----------
      - name: Debug ¬∑ scan TMDL for DEV host & SQL ID
        env:
          FABRIC_DEV_SQL_HOST: ${{ secrets.FABRIC_DEV_SQL_HOST }}
          FABRIC_DEV_SQL_ID:   ${{ secrets.FABRIC_DEV_SQL_ID }}
        run: |
          set -euo pipefail
          echo "=== .tmdl files ==="
          find . -type f -iname "*.tmdl" | sed 's/^/ - /' || true
          echo ""
          echo "=== files containing DEV SQL host ==="
          grep -RIl --include \*.tmdl "$FABRIC_DEV_SQL_HOST" . | sed 's/^/ - /' || true
          echo ""
          echo "=== files containing DEV SQL endpoint ID ==="
          grep -RIl --include \*.tmdl "$FABRIC_DEV_SQL_ID" . | sed 's/^/ - /' || true
          echo ""
          echo "Note: If either list is empty, the find strings won't match."

      # ---------- (Optional) list PBIP assets for visibility ----------
      - name: Discover artifacts
        run: |
          echo "üîé Semantic Model files:"
          find "${GITHUB_WORKSPACE}" -type f \( -iname "*.tmdl" -o -iname "*.pbism" -o -iname "*.json" \) \
            | grep -i "SemanticModel" | sed 's/^/ - /' || true

      # ---------- Deploy ----------
      - name: Deploy Fabric Artifacts
        env:
          FABRIC_DEV_WORKSPACE_ID:  ${{ secrets.FABRIC_DEV_WORKSPACE_ID }}
          FABRIC_PROD_WORKSPACE_ID: ${{ secrets.FABRIC_PROD_WORKSPACE_ID }}
          FABRIC_DEV_SQL_HOST:      ${{ secrets.FABRIC_DEV_SQL_HOST }}
          FABRIC_PROD_SQL_HOST:     ${{ secrets.FABRIC_PROD_SQL_HOST }}
          FABRIC_DEV_SQL_ID:        ${{ secrets.FABRIC_DEV_SQL_ID }}
          FABRIC_PROD_SQL_ID:       ${{ secrets.FABRIC_PROD_SQL_ID }}
        run: |
          set -euo pipefail
          if [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            echo "üöÄ Deploying to DEV workspace..."
            python scripts/deploy_fabric_items.py \
              --WorkspaceId "${{ secrets.FABRIC_DEV_WORKSPACE_ID }}" \
              --Environment "DEV" \
              --RepositoryDirectory "${GITHUB_WORKSPACE}" \
              --ItemsInScope all \
              --Debug
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "üöÄ Deploying to PROD workspace..."
            python scripts/deploy_fabric_items.py \
              --WorkspaceId "${{ secrets.FABRIC_PROD_WORKSPACE_ID }}" \
              --Environment "PROD" \
              --RepositoryDirectory "${GITHUB_WORKSPACE}" \
              --ItemsInScope all \
              --Debug
          else
            echo "‚ö†Ô∏è Branch ${GITHUB_REF_NAME} not mapped. Skipping."
          fi
